Баг-репорт должен содержать ряд обязательных атрибутов:
1. Заголовок 
Ваш заголовок должен быть кратким, но емким (то есть не «Фича А сломана», а «Фича А не срабатывает при первом использовании продукта»).   

2. Детальное описание 
Нарисуйте яркую картинку, не упускайте важных фактов. Однако при этом старайтесь не включать лишних деталей, которые могут отвлечь или запутать разработчика/аналитика/менеджера.

3. Ожидаемый результат vs фактический результат.
После того как члены вашей команды начнут узнавать о дефекте больше, они станут делать выводы о том, что должно было произойти, и о том, что на самом деле произошло. 
Рекомендуем эту информацию выделять в тексте. 
    
4. Серьезность/приоритет
    Разные системы баг-трекинга предлагают нам разные пути описания серьезности и приоритета баг-репорта, неизменным остается лишь смысл, вкладываемый в эти поля. Те, кто привык работать с Atlassian Jira, не всегда понимают разницу между этими понятиями, так как не имели опыта их совместного использования. 
    Мы придерживаемся подхода, в котором эти два понятия разделяются и используются совместно.
    
    Серьезность (severity) — это атрибут, характеризующий влияние дефекта на работоспособность приложения. Отвечает на вопрос «Насколько критична эта ошибка/дефект для работоспособности системы?» 
    Например, в вашем интернет-магазине отвалилась онлайн-оплата — это серьезный дефект. А еще не отображается форма «Подпишитесь на нашу рассылку». Неприятно, конечно, но работать можно.
    Как правило, есть 5 уровней серьезности: 
    - S1 Блокирующая (Blocker) - это ошибка, приводящая приложение в нерабочее состояние, в результате которого дальнейшая работа с тестируемой системой или ее ключевыми функциями становится невозможна. Решение проблемы необходимо для дальнейшего функционирования системы.
    - S2 Критическая (Critical) - неправильно работающая ключевая бизнес-логика; дыра в системе безопасности; проблема, которая приводит к временному падению сервера или в нерабочее состояние некоторую часть системы, без возможности решения проблемы с использованием других входных точек. Решение проблемы необходимо для дальнейшей работы с ключевыми функциями тестируемой системы.
    - S3 Значительная (Major) - часть основной бизнес-логики работает некорректно. Ошибка не критична, или есть возможность для работы с тестируемой функцией, используя другие входные точки.
    - S4 Незначительная (Minor) — это ошибка, не нарушающая бизнес-логику тестируемой части приложения, очевидная проблема пользовательского интерфейса.
    - S5 Тривиальная (Trivial) — это ошибка, не касающаяся бизнес-логики приложения; плохо воспроизводимая проблема, малозаметная посредством пользовательского интерфейса; проблема сторонних библиотек или сервисов; проблема, не оказывающая никакого влияния на общее качество продукта.
        
    Приоритет (priority) — это атрибут, указывающий на очередность выполнения задачи или устранения дефекта. Отвечает на вопрос «В каком порядке мы будем чинить дефекты?»
    Как правило, приоритет дефектам назначает ответственный за весь проект. Это может быть не только главный тестировщик, но и, например, менеджер проекта. Приоритетов три:
    - P1 Высокий (High) - Ошибка должна быть исправлена как можно быстрее, так как ее наличие является критическим для проекта.
    - P2 Средний (Medium) - Ошибка должна быть исправлена, ее наличие не является критичным, но требует обязательного решения.
    - P3 Низкий (Low) - Ошибка должна быть исправлена, ее наличие не является критичным и не требует срочного решения.
        

Дополнительные атрибуты баг-репорта
- Скриншоты или запись экрана.
Хорошее изображение и видео дефекта может сэкономить большое количество времени всей команде.
- Ссылка на документацию.
Важно показать какому требованию не соответствует текущее поведение системы.
- Дополнительные файлы.
Логи ошибок консоли / файлы определенного размера или типа и так далее — всё, что поможет команде воспроизвести дефект и быстро понять его причину.
- Ориентиры.
Комментарии, например похожие проблемы, с которыми вы сталкивались раньше, чтобы помочь читателю прийти к решению или хотя бы попробовать применить схожий подход.
- Окружение.
Каким браузером, устройством, версией ОС вы пользовались, тестируя? Какие еще детали помогут нарисовать точную картину происходящего?
- Комментарий.
Обсуждение дефекта, ссылки на похожие проблемы, с которыми вы сталкивались раньше.
- Исполнитель.
Тот, кто отвечает за исправление дефекта в текущий момент.
- Автор.
Тот, кто создал отчет о дефекте. У него можно уточнить дополнительные детали по дефекту.
- Статус.
Текущий статус дефекта в баг-трекинговой системе.
- Версия ПО.
Версия, в которой был обнаружен дефект.
- Версия исправления.
Версия ПО, в которой будет исправлен баг.
